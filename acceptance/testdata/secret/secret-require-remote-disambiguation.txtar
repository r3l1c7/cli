# Set up env vars
env REPO=${SCRIPT_NAME}-${RANDOM_STRING}

# Use gh as a credential helper
exec gh auth setup-git

# Create a repository with a file so it has a default branch
exec gh repo create ${ORG}/${REPO} --add-readme --private

# Defer repo cleanup
defer gh repo delete --yes ${ORG}/${REPO}

# Create a fork
exec gh repo fork ${ORG}/${REPO} --org ${ORG} --fork-name ${REPO}-fork
sleep 5

# Defer fork cleanup
defer gh repo delete --yes ${ORG}/${REPO}-fork

# Clone and move into the fork repo
exec gh repo clone ${ORG}/${REPO}-fork
cd ${REPO}-fork

# Secret list requires disambiguation
! exec gh secret list
stderr 'multiple remotes detected. please specify which repo to use by providing the -R, --repo argument'

# Secret set requires disambiguation
! exec gh secret set 'TEST_SECRET_NAME' --body 'TEST_SECRET_VALUE'
stderr 'multiple remotes detected. please specify which repo to use by providing the -R, --repo argument'

# Secret delete requires disambiguation
! exec gh secret delete 'TEST_SECRET_NAME'
stderr 'multiple remotes detected. please specify which repo to use by providing the -R, --repo argument'

# Move out of the fork repo to test whether secret commands work without local repository context
cd ..

# Secret set using --repo flag does not require disambiguation
exec gh secret set 'TEST_SECRET_NAME' --body 'TEST_SECRET_VALUE' --repo ${ORG}/${REPO}-fork

# Secret list using --repo flag does not require disambiguation
exec gh secret list --repo ${ORG}/${REPO}-fork
stdout 'TEST_SECRET_NAME'

# Secret delete using --repo flag does not require disambiguation
exec gh secret delete 'TEST_SECRET_NAME' --repo ${ORG}/${REPO}-fork

# Setup GH_REPO for testing environment variable behavior
env GH_REPO=${ORG}/${REPO}-fork

# Secret set using GH_REPO env var does not require disambiguation
exec gh secret set 'TEST_SECRET_NAME2' --body 'TEST_SECRET_VALUE2'

# Secret list using GH_REPO env var does not require disambiguation
exec gh secret list
stdout 'TEST_SECRET_NAME2'

# Secret delete using GH_REPO env var does not require disambiguation
exec gh secret delete 'TEST_SECRET_NAME2'
